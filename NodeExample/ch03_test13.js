var users = [{name:'소녀시대', age:20}, {name:'걸스데이', age:22}, {name:'티아라', age:21}]; // 3 개의 객체가 배열의 원소로 들어가 있다.

delete users[1]; // 두 번째 원소를 삭제

console.dir(users); // 배열 안에 객체가 2 개가 들어 있는 건 맞지만, 중간에 있는 건 콤마로 해서 실제로 3 개가 들어가 있는 형태가 된다.

users.forEach(function(elem, index) {
    console.log('원소 #' + index); // 0과 2가 출력되어서 삭제한 곳이 빈 것 같지만, 개수 자체는 바뀌지 않았다. 배열이 3 개로 인식된다.
    console.dir(elem);
});

// 실제 배열 원소가 3 개라고 생각하게 된다. // length를 해 보면 3 개가 된다. // 배열 원소 안에 들어가 있는 중간에 있는 것들을 삭제할 때는, delete라는 것을 쓰지 않는다. // 대신 splice를 사용한다.
// splice는 중간에 있는 것을 삭제할 때 사용한다. // 또는 중간에 원소를 추가할 때 사용한다.
// splice는, splice 함수를 사용할 때 파라미터가 중요한데, 파라미터가 여러 개가 들어간다. 그래서 첫 번째 파라미터는 중간의 어디를 얘기하는지 인덱스를 집어 넣는다. 거기서부터 추가하거나 삭제가 되는 것이다. 두 번째 파라미터는 몇 개를 삭제하는지가 된다. 0일 경우는 추가하는 경우다. 그 다음에 개수가 나오면 삭제하는 경우가 된다.

users.splice(1, 0, {name:'애프터스쿨', age:24}); // 두 번째에 세 번째 파라미터에 있는 것(객체)을 추가한다.
console.dir(users); // users 출력

users.splice(2, 1); // 인덱스 2부터 시작해서 하나를 삭제한다.
console.dir(users);

// splice는 중간에 있는 원소를 추가하거나 삭제하기 위한 것이다. // 어떤 것은 추가이고, 어떤 것은 삭제인데, 파라미터에 따라서 달라지므로 해석해야 한다.
