console.log('argv 속성의 파라미터 수 : ' + process.argv.length); // %d를 써도 괜찮고, +로 문자열을 붙여 줘도 괜찮다. // +로 process.argv.length가 문자열로 변경되고, 서로 붙여 줘서 출력이 된다. // argv 객체의 length 속성을 출력했을 때, 숫자가 나왔으므로 배열이거나 리스트일 것이다.
console.dir(process.argv); // 객체 안의 속성의 전부를 전부 다 출력  // -> 결과 : 속성의 이름은 없고, 대괄호를 이용해서 그 안에 콤마로 구분된 값이 있다. - 배열로 되어 있다는 것이다.  // node.exe라고 하는 노드 실행 파일, ch02_02.js가 있다. // 두 개의 전체 경로(full path)가 들어 있다. // 어떤 자바스크립트 파일을 노드 실행 파일을 이용해서 실행했을 때, 2 개의 파라미터가 사용된다는 것을 알 수 있도록 해 준다. // 그거는 process라는 객체 안에 들어 있다. // process도 대표적인 전역 객체 중 하나로, 어디서든 접근해서 사용할 수 있다. // process.argv는 객체이고 배열이다. // 객체 자체를 그대로 dir로 출력

process.argv.forEach(function(item, index) { // 이 안의 배열의 원소의 개수만큼이 함수를 실행해 준다.
    console.log(index + ' : ' + item);
}); // 각각을 접근해서 출력

// process라고 하는 전역 객체를 사용할 수 있다.
// process라는 객체의 env라고 하는 속성을 이용해서 환경 변수를 확인할 수 있다.

// 전역 변수, 전역 객체라고 하는 게 어떤 것인지 대표적으로 console과 process라고 하는 게 갖고 있는 가장 간단한 속성과 또는 그 속성의 일부로 들어간 함수라고 하는 거를 사용하는 방법에 대해서 살펴 보았다.
