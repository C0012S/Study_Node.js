console.log('안녕하세요.'); 

// Node.js는 기존의 웹 브라우저 안에 포함되던 자바스크립트 코드를 PC나 서버에서 그대로 파일 단위로 실행할 수 있다는 개념이다.
// 자바스크립트 파일을 실행하기 위해서 node 실행 파일을 설치했다. 그래서 node.exe 파일을 사용할 수 있기 때문에 명령 프롬프트를 열고 거기서 test1.js를 만들었다면 node test1.js를 실행할 수 있다.
console.log('숫자입니다. %d', 10); // 자바스크립트는 '와 "를 구분하지 않는다. '를 권장해서 사용한다. // 숫자가 %d를 대체해서 출력된다.
console.log('문자열입니다. %s', '안녕'); // 글자는 %s로 넣어 준다. // 문자열이 %s를 대체해서 출력된다.

var person = {
    name:'소녀시대',
    age:20
}; // 자바스크립트 객체는 중괄호를 이용해서 만든다. // person 변수에 자바스크립트 객체를 만들어서 할당했다. // 자바스크립트 객체 안에는 name과 age 속성이 들어가 있다. 속성은 ,로 구분되고 속성은 이름과 키 값이 될 것이다. 키라는 이름과 '소녀시대' 같은 value 값으로 속성 값으로 구성이 된다.
console.log('자바스크립트 객체입니다. %j', person); // JSON 객체 // 자바스크립트 객체 // 명확하게 얘기하면 JSON 객체보다는 자바스크립트 객체라고 할 수 있다. // JSON 객체에서 자바스크립트 객체로 변경한다. 왜냐하면 JSON 객체라고 하게 되면, 서버, 웹 서버, 대부분 웹 서버가 될 것인데, 웹 서버와 클라이언트 간의 자바스크립트 객체 포맷을 주고받기 위한 것인데 그 포맷 자체는 이 속성 이름인 경우에도 문자열로 표시한다. 그런 식으로 약간의 차이가 있다. 그래서 자바스크립트 객체라는 게 더 명확할 수 있다. // %j라고 하는 거로 하면 자바스크립트 객체를 지정해서 그거로 대체해서 보여 주게 된다. 그러면 JSON 문자열로 표시된다. 결과는 JSON이니까 JSON으로 표시된다.
// console.log()가 가지고 있는 기능을 같이 봤다. // console.log()는 console이라는 객체를 쓸 수 있다는 것인데, console 객체는 전역 객체라고 해서 Node.js 즉, Node.js를 실행할 수 있는 자바스크립트 코드에서 언제 어디서든 사용할 수가 있다. 언제 어디서든 이 console이라는 객체를 쓸 수 있기 때문에 다른 코드를 입력하지 않고 console에 .log를 하면 바로 로그를 출력할 수 있다.
// console에는 다른 함수들도 들어있다.
